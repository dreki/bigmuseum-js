import Authentication from 'components/Authentication'
import { withIronSessionSsr } from 'iron-session/next'
import { IRON_SESSION_CONFIG, Session } from 'lib/config'
import Reddit from 'lib/reddit'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { useEffect } from 'react'
import { RedditUser } from 'snoowrap'
import styles from '../styles/Home.module.css'
// import { useSession, signIn, signOut } from 'next-auth/react'
// import snoowrap, { RedditUser, Subreddit } from 'snoowrap';

interface Props {
  // Username (optional)
  username?: string,
  userIsLoggedIn: boolean
}

// const Home: NextPage<Props> = ({session, redditId, coolStuff}) => {
const Home: NextPage<Props> = (props) => {

  useEffect(() => {
  })



  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="text-3xl font-bold underline">
          Hello world!
        </h1>
        <h1>Cool!</h1>
        <Authentication
          userIsLoggedIn={props.userIsLoggedIn}
          username={props.username} />
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

async function _getServerSideProps(context: { req: { session: Session } }): Promise<{ props: any }> {
  console.log(`> _getServerSideProps, context.req.session:`);
  console.log(context.req.session);
  // console.log(`> context:`);
  // console.log(context);

  // TODO: Load Reddit data from the backend, since the env vars are only on the server.
  const reddit: Reddit = new Reddit(
    context.req.session.accessToken,
    context.req.session.refreshToken
  )
  let userIsLoggedIn = false;
  // username (optional)
  let username: string | undefined;
  await reddit.getMe().then(async (user: RedditUser) => {
    userIsLoggedIn = true;
    username = user.name;
  }).catch(console.error);

  const props: Props = {
    userIsLoggedIn,
    username
  };

  return { props }
}
export const getServerSideProps = withIronSessionSsr(_getServerSideProps, IRON_SESSION_CONFIG)
// export { withIronSessionSsr(_getServerSideProps, IRON_SESSION_CONFIG) as getServerSideProps }

export default Home
